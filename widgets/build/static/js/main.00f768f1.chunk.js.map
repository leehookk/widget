{"version":3,"sources":["components/Accordion.js","components/Search.js","components/Dropdown.js","components/Convert.js","components/Translate.js","components/Route.js","components/Link.js","components/Header.js","App.js","index.js"],"names":["Accordion","items","useState","activeIndex","setActiveIndex","renderedItems","map","item","index","active","Fragment","onClick","onTitleClick","className","title","content","Search","term","setTerm","debouncedTerm","setDebouncedTerm","results","setResults","console","log","useEffect","timeId","setTimeout","clearTimeout","a","axios","get","params","action","list","origin","format","srsearch","data","query","search","renderedResults","result","href","pageid","dangerouslySetInnerHTML","__html","snippet","value","onChange","event","target","Dropdown","label","options","selected","onSelectedChange","open","setOpen","onBodyClick","e","ref","current","contains","document","body","addEventListener","capture","removeEventListener","renderedOptions","option","useRef","Convert","language","text","translated","setTranslated","debouncedText","setDebouncedText","TimerId","post","q","key","translations","translatedText","doTranslation","Translate","setLanguage","setText","Route","path","children","window","location","pathname","currentPath","setCurrentPath","onLocationChange","Link","metaKey","ctrlKey","preventDefault","history","pushState","navEvent","PopStateEvent","dispatchEvent","Header","setSelected","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.00f768f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Accordion = ({ items }) => {\n\n    const [activeIndex, setActiveIndex] = useState(null);\n\n    const onTitleClick = (index) => {\n        setActiveIndex(index);\n    }\n\n\n    const renderedItems = items.map((item, index) => {\n        const active = index === activeIndex ? \"active\" : \"\";\n        return (\n            <React.Fragment key={item.title}>\n                <div onClick={() => { onTitleClick(index) }} className={`title ${active}`}>\n                    <i className=\"dropdown icon\" />\n                    {item.title}\n                </div>\n                <div className={`content ${active}`}>\n                    <p>{item.content}</p>\n                </div>\n            </React.Fragment>\n        );\n    })\n    return (\n        <div className=\"ui styled accordion\">\n            {renderedItems}\n        </div>\n    );\n}\n\nexport default Accordion;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Search = () => {\n    const [term, setTerm] = useState('programming');\n    const [debouncedTerm, setDebouncedTerm] = useState(term);\n    const [results, setResults] = useState([]);\n    console.log(results);\n\n\n    //既可以实现当我们500ms不输入任何键的时候才进行搜索，也可以当我们搜索的term不发生改变的时候，不调用搜索函数\n    useEffect(() => {\n        const timeId = setTimeout(() => {\n            setDebouncedTerm(term);//when the current term and the previous term stays the same, we don't have to do anything, which is effecient\n        }, 500)\n\n        return () => {\n            clearTimeout(timeId);\n        }\n    }, [term]);\n\n    //used for search the term and setResults based on the response data\n    useEffect(() => {\n        const search = async () => {\n            const { data } = await axios.get(\"https://en.wikipedia.org/w/api.php\", {\n                params: {\n                    action: 'query',\n                    list: 'search',\n                    origin: '*',\n                    format: 'json',\n                    srsearch: debouncedTerm,\n                },\n            });\n            setResults(data.query.search);\n        }\n        if (term) {\n            search();\n        }\n    }, [debouncedTerm]);\n\n    const renderedResults = results.map((result) => {\n        return <div className=\"item\" key={result.pageid}>\n            <div className=\"right floated content\">\n                <a\n                    className=\"ui button\"\n                    href={`https://en.wikipedia.org?curid=${result.pageid}`}\n                >\n                    Go\n                </a>\n            </div>\n            <div className=\"content\">\n                <div className=\"header\">\n                    {result.title}\n                </div>\n                <span dangerouslySetInnerHTML={{ __html: result.snippet }}></span>\n            </div>\n        </div>\n    });\n\n    return (\n        <div>\n            <div className=\"ui form\">\n                <div className=\"field\">\n                    <label>Enter Search Term:</label>\n                    <input\n                        value={term}\n                        onChange={(event) => { setTerm(event.target.value) }}\n                        className=\"input\"\n                    />\n                </div>\n            </div>\n            <div className=\"ui celled list\">{renderedResults}</div>\n        </div>\n    );\n}\n\nexport default Search;","import React, { useState, useEffect, useRef } from 'react';\n\nconst Dropdown = ({ label, options, selected, onSelectedChange }) => {\n    const [open, setOpen] = useState(false);\n\n    useEffect(() => {\n        const onBodyClick = (e) => {\n            if (ref.current.contains(e.target)) {\n                return;\n            }\n            setOpen(false);\n        }\n\n        document.body.addEventListener(\"click\", onBodyClick, { capture: true });\n\n        //当DropDown被隐藏的时候，会自动调用return 函数，return 函数在两种情况下会被调用，第一种是初始化的时候return的内容会被hold,然后在下一次render的时候，最先调用hold的值。\n        //第二种就是return 所在的component消失的时候，会自动调用这个值\n        //即使componnet消失了，event listerner除非被remove了，否则会一直在\n        return (() => {\n            document.body.removeEventListener('click', onBodyClick, { capture: true });\n        });\n    }, []);\n\n    const renderedOptions = options.map((option) => {\n        if (option.value === selected.value) {\n            return null;\n        }\n        return (\n            <div\n                onClick={() => {\n                    onSelectedChange(option);\n                }}\n                key={option.value}\n                className=\"item\"\n            >\n                {option.label}\n            </div>\n        );\n    });\n\n    const ref = useRef();\n\n    return (\n        <div ref={ref} className=\"ui form\">\n            <div className=\"field\">\n                <label className=\"label\">{label}</label>\n                <div\n                    onClick={() => {\n                        setOpen(!open)\n                    }}\n                    className={`ui selection dropdown ${open ? 'visible active' : ''}`}\n                >\n                    <i className=\"dropdown icon\"></i>\n                    <div className=\"text\">{selected.label}</div>\n                    <div className={`menu ${open ? 'visible transition' : ''}`}>{renderedOptions}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Dropdown;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Convert = ({ language, text }) => {\n    const [translated, setTranslated] = useState('');\n    const [debouncedText, setDebouncedText] = useState('');\n\n    useEffect(() => {\n        const TimerId = setTimeout(() => {\n            setDebouncedText(text);\n        }, 1000)\n\n        return (() => { clearTimeout(TimerId) });\n    }, [text]);\n\n    useEffect(() => {\n        const doTranslation = async () => {\n            const { data } = await axios.post('https://translation.googleapis.com/language/translate/v2', {}, {\n                params: {\n                    q: debouncedText,\n                    target: language.value,\n                    key: 'AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM'\n                }\n            });\n\n            setTranslated(data.data.translations[0].translatedText);\n        }\n\n        doTranslation();\n    }, [debouncedText, language]);\n\n    return (\n        <div>{translated}</div>\n    );\n}\n\nexport default Convert;","import React, { useState } from 'react';\nimport Dropdown from './Dropdown';\nimport Convert from './Convert'\n\nconst options = [\n    {\n        label: 'Japanese',\n        value: 'ja',\n    },\n    {\n        label: 'Korean',\n        value: 'ko',\n    },\n    {\n        label: 'Chinese',\n        value: 'zh'\n    }\n]\nconst Translate = () => {\n\n    const [language, setLanguage] = useState(options[0]);\n    const [text, setText] = useState('');\n\n    return (\n        <div>\n            <div className=\"ui form\">\n                <div className=\"field\">\n                    <label>Enter Text</label>\n                    <input value={text} onChange={(e) => { setText(e.target.value); }} />\n                </div>\n            </div>\n            <Dropdown label=\"Select a Language\" options={options} selected={language} onSelectedChange={setLanguage} />\n            <hr />\n            <h3 className=\"header\">Output</h3>\n            <Convert language={language} text={text} />\n        </div>\n    );\n}\n\nexport default Translate;","import { useEffect, useState } from 'react';\n\nconst Route = ({ path, children }) => {\n    const [currentPath, setCurrentPath] = useState(window.location.pathname);\n    useEffect(() => {\n        const onLocationChange = () => {\n            setCurrentPath(window.location.pathname);\n        }\n        window.addEventListener('popState', onLocationChange);\n\n        return (() => {\n            window.removeEventListener('popState', onLocationChange);\n        });\n    }, []);\n    return currentPath === path ? children : null; //when changing the url, we also change the window.location.pathname\n}\n\nexport default Route;","import React from 'react';\n\nconst Link = ({ href, className, children }) => {\n    const onClick = (event) => {\n        if (event.metaKey || event.ctrlKey) {\n            return;\n        }\n        event.preventDefault();//stop refresing the full page\n        window.history.pushState({}, '', href);//tell that the url has changed, and we have to update the content\n        const navEvent = new PopStateEvent('popState');\n        window.dispatchEvent(navEvent);//to tell the components which have used url in App componnet that the url has changed.\n\n    }\n    return (\n        <a onClick={onClick} href={href} className={className}>{children}</a>\n    );\n}\nexport default Link;","import React from 'react';\nimport Link from './Link';\n\nconst Header = () => {\n    return (\n        <div className=\"ui secondary pointing menu\">\n            <Link href=\"/\" className=\"item\">Accordion</Link>\n            <Link href=\"/list\" className=\"item\">Search</Link>\n            <Link href=\"/dropdown\" className=\"item\">Dropdown</Link>\n            <Link href=\"/translate\" className=\"item\">Translate</Link>\n        </div>\n    );\n}\nexport default Header;","import React, { useState } from 'react';\nimport Accordion from './components/Accordion';\nimport Search from './components/Search';\nimport Dropdown from './components/Dropdown';\nimport Translate from './components/Translate';\nimport Route from './components/Route';\nimport Header from './components/Header';\n\nconst items = [\n    {\n        title: \"what is react\",\n        content: \"it's a javascript front framework\"\n    },\n    {\n        title: \"why use react?\",\n        content: \"because it is the favorite framework\"\n    },\n    {\n        title: \"how do you use react\",\n        content: \"learn from you\"\n    }\n\n]\n\nconst options = [\n    {\n        label: \"The Color Red\",\n        value: 'red'\n    },\n    {\n        label: \"The Color Green\",\n        value: 'green'\n    },\n    {\n        label: \"A Shade of Blue\",\n        value: 'blue'\n    },\n];\n\n//the header element is for stoping the full page refresh and changing the url only\n//when we click on a navigator, the value of window.location.pathname will change\nexport default () => {\n    const [selected, setSelected] = useState(options[0]);\n    return (\n        <div>\n            <Header />\n            <Route path=\"/\">\n                <Accordion items={items} />\n            </Route>\n            <Route path=\"/list\">\n                <Search />\n            </Route>\n            <Route path=\"/dropdown\">\n                <Dropdown label=\"Select a Color\" options={options} selected={selected} onSelectedChange={setSelected} />\n            </Route>\n            <Route path=\"/translate\">\n                <Translate />\n            </Route>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}